{"name":"Filtering profanity for valid texts after adding new valid profanity string","id":"adding-new-profanity-string-and-updating-input-character/text-with-replacement-string;filtering-profanity-for-valid-texts-after-adding-new-valid-profanity-string","testSteps":[{"number":1,"description":"1: Filtering profanity for valid texts after adding new valid profanity string ({text\u003dthis is awesome, format\u003djson, profanity String\u003dthis,some, replacement char\u003d, filtered text\u003d**** is awe****})","duration":3768,"startTime":"2021-07-18T21:33:11.413Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"lineNumber":9,"children":[{"number":2,"description":"When Siva requests a \"this is awesome\" after filtering using new \"this,some\" by replacing with \"\" character in \"json\"","duration":3044,"startTime":"2021-07-18T21:33:11.426Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":3,"description":"Filter input text this is awesome by adding new text this,some by replacing  char in response format json","duration":2712,"startTime":"2021-07-18T21:33:11.753Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":2,"children":[{"number":4,"description":"GET https://www.purgomalum.com/service/json?text\u003dthis%20is%20awesome\u0026add\u003dthis%2Csome\u0026fill_char\u003d","duration":7,"startTime":"2021-07-18T21:33:14.449Z[Etc/UTC]","result":"SUCCESS","restQuery":{"method":"GET","path":"https://www.purgomalum.com/service/json?text\u003dthis%20is%20awesome\u0026add\u003dthis%2Csome\u0026fill_char\u003d","content":"","contentType":"null","requestHeaders":"Accept\u003d*/*","requestCookies":"","responseHeaders":"Content-Type: application/json\nAccess-Control-Allow-Origin: *\nX-Cloud-Trace-Context: c430820acbebba34b5a44e10e804ed7b\nDate: Sun, 18 Jul 2021 21:33:14 GMT\nServer: Google Frontend\nContent-Length: 28","responseCookies":"","responseBody":"{\n    \"result\": \"**** is awe****\"\n}","statusCode":200},"precondition":false,"level":3}]}]},{"number":5,"description":"Then he should be able to view the \"**** is awe****\" returned in requested \"json\"","duration":698,"startTime":"2021-07-18T21:33:14.481Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":6,"description":"Validate response \u0027result\u0027 **** is awe**** in format json","duration":648,"startTime":"2021-07-18T21:33:14.530Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":2}]}]},{"number":7,"description":"2: Filtering profanity for valid texts after adding new valid profanity string ({text\u003dthis is a test, format\u003dxml, profanity String\u003da, replacement char\u003d-, filtered text\u003dthis is - test})","duration":358,"startTime":"2021-07-18T21:33:15.239Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":0,"lineNumber":10,"children":[{"number":8,"description":"When Siva requests a \"this is a test\" after filtering using new \"a\" by replacing with \"-\" character in \"xml\"","duration":237,"startTime":"2021-07-18T21:33:15.242Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":9,"description":"Filter input text this is a test by adding new text a by replacing - char in response format xml","duration":225,"startTime":"2021-07-18T21:33:15.252Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":2,"children":[{"number":10,"description":"GET https://www.purgomalum.com/service/xml?text\u003dthis%20is%20a%20test\u0026add\u003da\u0026fill_char\u003d-","duration":0,"startTime":"2021-07-18T21:33:15.477Z[Etc/UTC]","result":"SUCCESS","restQuery":{"method":"GET","path":"https://www.purgomalum.com/service/xml?text\u003dthis%20is%20a%20test\u0026add\u003da\u0026fill_char\u003d-","content":"","contentType":"null","requestHeaders":"Accept\u003d*/*","requestCookies":"","responseHeaders":"Content-Type: application/xml\nAccess-Control-Allow-Origin: *\nX-Cloud-Trace-Context: 6e0d3e9913707d58b0299bf9ac1ffcef\nDate: Sun, 18 Jul 2021 21:33:15 GMT\nServer: Google Frontend\nContent-Length: 145","responseCookies":"","responseBody":"\u003cPurgoMalum xmlns\u003d\"http://www.purgomalum.com\"\u003e\n  \u003cresult\u003ethis is - test\u003c/result\u003e\n\u003c/PurgoMalum\u003e","statusCode":200},"precondition":false,"level":3}]}]},{"number":11,"description":"Then he should be able to view the \"this is - test\" returned in requested \"xml\"","duration":116,"startTime":"2021-07-18T21:33:15.480Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":12,"description":"Validate response \u0027result\u0027 this is - test in format xml","duration":110,"startTime":"2021-07-18T21:33:15.485Z[Etc/UTC]","result":"SUCCESS","precondition":false,"level":2}]}]}],"userStory":{"id":"adding-new-profanity-string-and-updating-input-character/text-with-replacement-string","storyName":"Adding new profanity string and updating input character/text with replacement string","path":"classpath:features/profanityFilter/adding_new_profanity_string_and_updating_input_character_text_with_replacement_string.feature","type":"feature"},"featureTag":{"name":"Profanity filter/Adding new profanity string and updating input character/text with replacement string","type":"feature","displayName":"Profanity filter/Adding new profanity string and updating input character/text with replacement string"},"title":"Filtering profanity for valid texts after adding new valid profanity string","description":"","tags":[{"name":"positive","type":"tag","displayName":"positive"},{"name":"Profanity filter/Adding new profanity string and updating input character/text with replacement string","type":"feature","displayName":"Adding new profanity string and updating input character/text with replacement string"},{"name":"Profanity filter","type":"capability","displayName":"Profanity filter"}],"startTime":"2021-07-18T21:33:11.280Z[Etc/UTC]","duration":4319,"projectKey":"","isManualTestingUpToDate":false,"dataTable":{"headers":["text","format","profanity String","replacement char","filtered text"],"rows":[{"values":["this is awesome","json","this,some","","**** is awe****"],"lineNumber":9,"result":"SUCCESS"},{"values":["this is a test","xml","a","-","this is - test"],"lineNumber":10,"result":"SUCCESS"}],"predefinedRows":true,"scenarioOutline":"When Siva requests a \"\u003ctext\u003e\" after filtering using new \"\u003cprofanity String\u003e\" by replacing with \"\u003creplacement char\u003e\" character in \"\u003cformat\u003e\"\n\rThen he should be able to view the \"\u003cfiltered text\u003e\" returned in requested \"\u003cformat\u003e\"\n\r","dataSetDescriptors":[{"startRow":0,"rowCount":0,"name":"","description":""}]},"manual":false,"testSource":"Cucumber","result":"SUCCESS","scenarioOutline":"When Siva requests a \"\u003ctext\u003e\" after filtering using new \"\u003cprofanity String\u003e\" by replacing with \"\u003creplacement char\u003e\" character in \"\u003cformat\u003e\"\nThen he should be able to view the \"\u003cfiltered text\u003e\" returned in requested \"\u003cformat\u003e\""}